import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Router, RouterInterface } from "../../../contracts/router/Router";
declare type RouterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Router__factory extends ContractFactory {
    constructor(...args: RouterConstructorParams);
    deploy(_roleStore: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Router>;
    getDeployTransaction(_roleStore: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Router;
    connect(signer: Signer): Router__factory;
    static readonly bytecode = "0x60a060405234801561001057600080fd5b506040516107b23803806107b283398101604081905261002f916100ac565b806100393361004b565b6001600160a01b0316608052506100dc565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6000602082840312156100be57600080fd5b81516001600160a01b03811681146100d557600080fd5b9392505050565b6080516106bb6100f7600039600061017d01526106bb6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806312d43a51146100465780631b82787814610075578063cfad57a21461008a575b600080fd5b600054610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610088610083366004610553565b61009d565b005b61008861009836600461059e565b610107565b6100ec7fa927eb55910bf41cb92ee3b8ace0d35f74ace59c3f9cd44531edbc7621ef542d6040518060400160405280600d81526020016c2927aaaa22a92fa8262aa3a4a760991b815250610161565b6101016001600160a01b038516848484610215565b50505050565b6000546001600160a01b03163314610155576040805163a35b150b60e01b81523360048201526024810191909152600360448201526223a7ab60e91b60648201526084015b60405180910390fd5b61015e8161026f565b50565b60405163ac4ab3fb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ac4ab3fb90604401602060405180830381865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f091906105c0565b61021157338160405163a35b150b60e01b815260040161014c929190610632565b5050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526101019085906102d0565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f785910160405180910390a15050565b6000610325826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103a79092919063ffffffff16565b8051909150156103a2578080602001905181019061034391906105c0565b6103a25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161014c565b505050565b60606103b684846000856103be565b949350505050565b60608247101561041f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161014c565b600080866001600160a01b0316858760405161043b9190610656565b60006040518083038185875af1925050503d8060008114610478576040519150601f19603f3d011682016040523d82523d6000602084013e61047d565b606091505b509150915061048e87838387610499565b979650505050505050565b60608315610508578251600003610501576001600160a01b0385163b6105015760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014c565b50816103b6565b6103b6838381511561051d5781518083602001fd5b8060405162461bcd60e51b815260040161014c9190610672565b80356001600160a01b038116811461054e57600080fd5b919050565b6000806000806080858703121561056957600080fd5b61057285610537565b935061058060208601610537565b925061058e60408601610537565b9396929550929360600135925050565b6000602082840312156105b057600080fd5b6105b982610537565b9392505050565b6000602082840312156105d257600080fd5b815180151581146105b957600080fd5b60005b838110156105fd5781810151838201526020016105e5565b50506000910152565b6000815180845261061e8160208601602086016105e2565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906103b690830184610606565b600082516106688184602087016105e2565b9190910192915050565b6020815260006105b9602083018461060656fea264697066735822122017691b10e2e005f0edf4b885fd9b18bacb85e006d1f249f315d4c825b51cd7ab64736f6c63430008100033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        anonymous?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        anonymous?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: any[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): RouterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Router;
}
export {};
//# sourceMappingURL=Router__factory.d.ts.map