import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { GasUtils, GasUtilsInterface } from "../../../contracts/gas/GasUtils";
declare type GasUtilsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class GasUtils__factory extends ContractFactory {
    constructor(...args: GasUtilsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<GasUtils>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): GasUtils;
    connect(signer: Signer): GasUtils__factory;
    static readonly bytecode = "0x6105ed61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80635a3911ca1461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610494565b61005c565b005b600061006787610284565b6040516316c48fdd60e11b81526001600160a01b0380831660048301526024820188905230604483015291925090871690632d891fba90606401600060405180830381600087803b1580156100bb57600080fd5b505af11580156100cf573d6000803e3d6000fd5b5050604051632e1a7d4d60e01b8152600481018890526001600160a01b0384169250632e1a7d4d9150602401600060405180830381600087803b15801561011557600080fd5b505af1158015610129573d6000803e3d6000fd5b5050505060005a61013a908661051a565b905060003a6101498a84610315565b610153919061052d565b9050868111156101605750855b6040516001600160a01b0386169082156108fc029083906000818181858888f19350505050158015610196573d6000803e3d6000fd5b50604080516001600160a01b0387168152602081018390527f57682c67f387deb1f0c7917d296d25f2c33b00578a1797dfbbf96bfb094d3ada910160405180910390a160006101e5828961051a565b9050806000036101f8575050505061027c565b6040516000906001600160a01b0387169083156108fc0290849084818181858888f1604080516001600160a01b038d16815260208101899052821515918101919091529095507fdf21011ae1e4461e887bfc0202c83fa5c650b5cc266ab305a70c871ccabc162b9450606001925061026e915050565b60405180910390a150505050505b505050505050565b6040516321f8a72160e01b81527f0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b860048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f919061054c565b92915050565b60405163bd02d0f560e01b81527f57830ed48ddd6c6926fd77150229412613ab7d4cc74eea4852e8d2fe32f2fd24600482015260009081906001600160a01b0385169063bd02d0f590602401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610569565b60405163bd02d0f560e01b81527fd7c8b81a0590c5156d999f6a2bf288c05e2981d523851127c064418a5e9d778060048201529091506000906001600160a01b0386169063bd02d0f590602401602060405180830381865afa15801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610569565b9050600061043e8583610452565b6104489084610582565b9695505050505050565b600068327cb2734119d3b7a9601e1b61046b838561052d565b6104759190610595565b9392505050565b6001600160a01b038116811461049157600080fd5b50565b60008060008060008060c087890312156104ad57600080fd5b86356104b88161047c565b955060208701356104c88161047c565b9450604087013593506060870135925060808701356104e68161047c565b915060a08701356104f68161047c565b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030f5761030f610504565b600081600019048311821515161561054757610547610504565b500290565b60006020828403121561055e57600080fd5b81516104758161047c565b60006020828403121561057b57600080fd5b5051919050565b8082018082111561030f5761030f610504565b6000826105b257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e18f90ddbe0b365c857223b3ff91234c6e861f2d18d1a3b2a73350a0e0dbb5a664736f6c63430008100033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        anonymous?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
    })[];
    static createInterface(): GasUtilsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): GasUtils;
}
export {};
//# sourceMappingURL=GasUtils__factory.d.ts.map