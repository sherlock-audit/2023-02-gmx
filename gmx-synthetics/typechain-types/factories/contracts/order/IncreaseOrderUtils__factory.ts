/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  IncreaseOrderUtils,
  IncreaseOrderUtilsInterface,
} from "../../../contracts/order/IncreaseOrderUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidCollateralToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidPositionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "minOracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "maxOracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "OracleBlockNumberNotWithinRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "oracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "expectedBlockNumber",
        type: "uint256",
      },
    ],
    name: "OracleBlockNumbersAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedPositionState",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedOrderType",
    type: "error",
  },
];

const _bytecode =
  "0x61184161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063da6fe44f1461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610fe2565b61005c565b005b80515160c082015161006e91906105bc565b61007b8160c0015161068a565b60008073__$2ebd8d293950cf319742e0db402ead4961$__635706dc466040518061014001604052808660000151600001516001600160a01b031681526020018660000151602001516001600160a01b031681526020018660000151606001516001600160a01b031681526020018660000151604001516001600160a01b031681526020016101108760400151516080015190565b6001600160a01b031681526020016101318760400151602001516060015190565b815260200186606001518152602001610154876040015160200151610100015190565b81526020016101698760400151516060015190565b6001600160a01b0316815260006020909101526040516001600160e01b031960e084901b16815261019d919060040161119f565b6040805180830381865af41580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd919061125b565b915091508260c00151604001516001600160a01b0316826001600160a01b03161415801561022557508260c00151606001516001600160a01b0316826001600160a01b031614155b156102625760c083015151604051632881bce960e21b81526001600160a01b03808516600483015290911660248201526044015b60405180910390fd5b60006102d36102748560400151515190565b604086810151805160600151910151518690604080516001600160a01b039586166020808301919091529486168183015292909416606083015215156080808301919091528351808303909101815260a0909101909252815191012090565b84515160405163fdfc26f360e01b81526001600160a01b0390911660048201526024810182905290915060009073__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f39060440161018060405180830381865af415801561033d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036191906112d8565b9050600061036e82515190565b6001600160a01b0316036104455761039d61038c8660400151515190565b82516001600160a01b039091169052565b60006103ab82516020015190565b6001600160a01b03161415806103d6575060006103ca82516040015190565b6001600160a01b031614155b156103f45760405163814991c360e01b815260040160405180910390fd5b61041c6104078660400151516060015190565b82516001600160a01b03909116602090910152565b80516001600160a01b038516604091820152858101510151516104459060408301519015159052565b61047e85608001518660a001516104628860400151602001515190565b6040890151602001516101200151602086015160c001516106bb565b73__$7a972c741e25767aac46238a61c2174fde$__63bd8b7e116040518060c00160405280886000015181526020018860c001518152602001886040015181526020018860200151815260200184815260200185815250856040518363ffffffff1660e01b81526004016104f39291906115fc565b60006040518083038186803b15801561050b57600080fd5b505af415801561051f573d6000803e3d6000fd5b505086515160208801516040890151515173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__94506374b6fe13935060405160e085901b6001600160e01b03191681526001600160a01b0393841660048201526024810192909252909116604482015260640160006040518083038186803b15801561059d57600080fd5b505af41580156105b1573d6000803e3d6000fd5b505050505050505050565b80516001600160a01b03166105e4576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca61060284600001516107fd565b6040518263ffffffff1660e01b815260040161062091815260200190565b602060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066191906116c0565b905080156106855781516040516309f8c93760e01b815261025991906004016116dd565b505050565b60208101516001600160a01b03166106b857805160405163182e30e360e01b815261025991906004016116dd565b50565b60028360078111156106cf576106cf611406565b036106e4576106df85858461087f565b6107f6565b60038360078111156106f8576106f8611406565b036107ee57610732604051806040016040528060138152602001726f72646572557064617465644174426c6f636b60681b81525083610899565b61076c60405180604001604052806018815260200177706f736974696f6e496e637265617365644174426c6f636b60401b81525082610899565b6107bd604051806040016040528060158152602001746d696e4f7261636c65426c6f636b4e756d6265727360581b815250866000815181106107b0576107b06116f1565b6020026020010151610899565b60008183116107cc57816107ce565b825b90506107da86826108e2565b6107e8576107e88682610937565b506107f6565b6107f6610953565b5050505050565b6000604051602001610835906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b61088a83838361096c565b610685576106858383836109a5565b6108de82826040516024016108af929190611707565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526109c4565b5050565b6000805b835181101561092b5782848281518110610902576109026116f1565b602002602001015111610919576000915050610931565b806109238161175c565b9150506108e6565b50600190505b92915050565b818160405162f2302f60e71b81526004016102599291906117b3565b60405163c1c0083160e01b815260040160405180910390fd5b600061097884836109e5565b6109845750600061099e565b61098e8383610a2f565b61099a5750600061099e565b5060015b9392505050565b828282604051633e0fa80560e11b8152600401610259939291906117d5565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000805b835181101561092b5782848281518110610a0557610a056116f1565b60200260200101511115610a1d576000915050610931565b80610a278161175c565b9150506109e9565b6000805b835181101561092b5782848281518110610a4f57610a4f6116f1565b60200260200101511015610a67576000915050610931565b80610a718161175c565b915050610a33565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610ab157610ab1610a79565b60405290565b60405161014081016001600160401b0381118282101715610ab157610ab1610a79565b604051606081016001600160401b0381118282101715610ab157610ab1610a79565b60405161010081016001600160401b0381118282101715610ab157610ab1610a79565b604051601f8201601f191681016001600160401b0381118282101715610b4757610b47610a79565b604052919050565b6001600160a01b03811681146106b857600080fd5b600060c08284031215610b7657600080fd5b610b7e610a8f565b90508135610b8b81610b4f565b81526020820135610b9b81610b4f565b60208201526040820135610bae81610b4f565b60408201526060820135610bc181610b4f565b60608201526080820135610bd481610b4f565b608082015260a0820135610be781610b4f565b60a082015292915050565b8035610bfd81610b4f565b919050565b60006001600160401b03821115610c1b57610c1b610a79565b5060051b60200190565b600082601f830112610c3657600080fd5b81356020610c4b610c4683610c02565b610b1f565b82815260059290921b84018101918181019086841115610c6a57600080fd5b8286015b84811015610c8e578035610c8181610b4f565b8352918301918301610c6e565b509695505050505050565b803560088110610bfd57600080fd5b803560038110610bfd57600080fd5b60006101408284031215610cca57600080fd5b610cd2610ab7565b9050610cdd82610c99565b8152610ceb60208301610ca8565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b80151581146106b857600080fd5b600060608284031215610d6a57600080fd5b610d72610ada565b90508135610d7f81610d4a565b81526020820135610d8f81610d4a565b60208201526040820135610da281610d4a565b604082015292915050565b60006101c08284031215610dc057600080fd5b610dc8610ada565b905081356001600160401b0380821115610de157600080fd5b9083019060c08286031215610df557600080fd5b610dfd610a8f565b8235610e0881610b4f565b81526020830135610e1881610b4f565b60208201526040830135610e2b81610b4f565b6040820152610e3c60608401610bf2565b6060820152610e4d60808401610bf2565b608082015260a083013582811115610e6457600080fd5b610e7087828601610c25565b60a083015250835250610e8890508360208401610cb7565b6020820152610da2836101608401610d58565b600060808284031215610ead57600080fd5b604051608081016001600160401b0381118282101715610ecf57610ecf610a79565b6040529050808235610ee081610b4f565b81526020830135610ef081610b4f565b60208201526040830135610f0381610b4f565b60408201526060830135610f1681610b4f565b6060919091015292915050565b600082601f830112610f3457600080fd5b81356020610f44610c4683610c02565b82815260079290921b84018101918181019086841115610f6357600080fd5b8286015b84811015610c8e57610f798882610e9b565b835291830191608001610f67565b600082601f830112610f9857600080fd5b81356020610fa8610c4683610c02565b82815260059290921b84018101918181019086841115610fc757600080fd5b8286015b84811015610c8e5780358352918301918301610fcb565b600060208284031215610ff457600080fd5b81356001600160401b038082111561100b57600080fd5b90830190610240828603121561102057600080fd5b611028610ab7565b6110328684610b64565b815260c0830135602082015260e08301358281111561105057600080fd5b61105c87828601610dad565b604083015250610100808401358381111561107657600080fd5b61108288828701610f23565b606084015250610120808501358481111561109c57600080fd5b6110a889828801610f87565b608085015250610140850135848111156110c157600080fd5b6110cd89828801610f87565b60a0850152506110e1886101608701610e9b565b60c08401526110f36101e08601610bf2565b60e08401526102008501358284015261022085013581840152505080935050505092915050565b6001600160a01b03169052565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b600081518084526020808501945080840160005b8381101561119457611181878351611127565b608096909601959082019060010161116e565b509495945050505050565b602081526111b160208201835161111a565b600060208301516111c5604084018261111a565b5060408301516111d8606084018261111a565b5060608301516111eb608084018261111a565b5060808301516111fe60a084018261111a565b5060a083015160c083015260c08301516101408060e085015261122561016085018361115a565b60e0860151610100868101919091528601519092506101206112498187018361111a565b90950151151593019290925250919050565b6000806040838503121561126e57600080fd5b825161127981610b4f565b6020939093015192949293505050565b60006020828403121561129b57600080fd5b604051602081016001600160401b03811182821017156112bd576112bd610a79565b806040525080915082516112d081610d4a565b905292915050565b60008183036101808112156112ec57600080fd5b6112f4610ada565b606082121561130257600080fd5b61130a610ada565b845161131581610b4f565b8152602085015161132581610b4f565b6020820152604085015161133881610b4f565b60408201528152610100605f19830181131561135357600080fd5b61135b610afc565b9250606085015183526080850151602084015260a0850151604084015260c0850151606084015260e085015160808401528085015160a08401525061012084015160c083015261014084015160e08301528160208201526113c0856101608601611289565b6040820152949350505050565b600081518084526020808501945080840160005b838110156111945781516001600160a01b0316875295820195908201906001016113e1565b634e487b7160e01b600052602160045260246000fd5b6008811061142c5761142c611406565b9052565b6003811061142c5761142c611406565b61144b82825161141c565b602081015161145d6020840182611430565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b80516101c080845281516001600160a01b0390811691850191909152602082015181166101e0850152604082015181166102008501526060820151811661022085015260808201511661024084015260a0015160c06102608401526000906115226102808501826113cd565b905060208301516115366020860182611440565b5060408381015180511515610160870152602081015115156101808701529081015115156101a0860152509392505050565b805160018060a01b03808251168452806020830151166020850152806040830151166040850152505060208101518051606084015260208101516080840152604081015160a0840152606081015160c0840152608081015160e084015260a081015161010084015260c081015161012084015260e08101516101408401525060408101516106856101608401825115159052565b604081526000835160018060a01b038082511660408501528060208301511660608501528060408301511660808501528060608301511660a08501528060808301511660c08501525060a0810151905061165960e084018261111a565b50602084015161166d610100840182611127565b50604084015161032061018084015261168a6103608401826114b6565b905060608501516101a084015260808501516116aa6101c0850182611568565b5060a09490940151610340830152506020015290565b6000602082840312156116d257600080fd5b815161099e81610d4a565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052603260045260246000fd5b604081526000835180604084015260005b818110156117355760208187018101516060868401015201611718565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b60006001820161177c57634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b8381101561119457815187529582019590820190600101611797565b6040815260006117c66040830185611783565b90508260208301529392505050565b6060815260006117e86060830186611783565b82810360208401526117fa8186611783565b91505082604083015294935050505056fea26469706673582212200f7833530796865d787982808182df95c661b59d72eeadb3646fb7c08b06ad7f64736f6c63430008100033";

type IncreaseOrderUtilsConstructorParams =
  | [linkLibraryAddresses: IncreaseOrderUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncreaseOrderUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class IncreaseOrderUtils__factory extends ContractFactory {
  constructor(...args: IncreaseOrderUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        IncreaseOrderUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: IncreaseOrderUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2ebd8d293950cf319742e0db402ead4961\\$__", "g"),
      linkLibraryAddresses["contracts/swap/SwapUtils.sol:SwapUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d31b232fb363902662fbc281b11ab3357\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7a972c741e25767aac46238a61c2174fde\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/IncreasePositionUtils.sol:IncreasePositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncreaseOrderUtils> {
    return super.deploy(overrides || {}) as Promise<IncreaseOrderUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IncreaseOrderUtils {
    return super.attach(address) as IncreaseOrderUtils;
  }
  override connect(signer: Signer): IncreaseOrderUtils__factory {
    return super.connect(signer) as IncreaseOrderUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncreaseOrderUtilsInterface {
    return new utils.Interface(_abi) as IncreaseOrderUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncreaseOrderUtils {
    return new Contract(address, _abi, signerOrProvider) as IncreaseOrderUtils;
  }
}

export interface IncreaseOrderUtilsLibraryAddresses {
  ["contracts/swap/SwapUtils.sol:SwapUtils"]: string;
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/position/IncreasePositionUtils.sol:IncreasePositionUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
