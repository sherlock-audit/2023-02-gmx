/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DecreaseOrderUtils,
  DecreaseOrderUtilsInterface,
} from "../../../contracts/order/DecreaseOrderUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sizeInTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    name: "EmptyPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidPositionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "minOracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "maxOracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "OracleBlockNumberNotWithinRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "oracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "expectedBlockNumber",
        type: "uint256",
      },
    ],
    name: "OracleBlockNumbersAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedOrderType",
    type: "error",
  },
];

const _bytecode =
  "0x611c6461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063da6fe44f1461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046111e2565b61005c565b005b604081015181515160c083015161007391906106b9565b6100808260c00151610790565b60006100ed61008e83515190565b835160600151845160800151604086015151604080516001600160a01b039586166020808301919091529486168183015292909416606083015215156080808301919091528351808303909101815260a0909101909252815191012090565b83515160405163fdfc26f360e01b81526001600160a01b0390911660048201526024810182905290915060009073__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f39060440161018060405180830381865af4158015610157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017b9190611376565b9050610186816107c1565b6101c084608001518560a0015161019f86602001515190565b60208701516101200151602086015160c00151602087015160e00151610826565b600073__$34af2f45da6b13f877428397704b7865d6$__6354f52a9f6040518060c00160405280886000015181526020018860c00151815260200187815260200188602001518152602001858152602001868152506040518263ffffffff1660e01b815260040161023191906116fb565b608060405180830381865af415801561024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027291906117bd565b905073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__6374b6fe1386600001516000015187602001516102a588515190565b60405160e085901b6001600160e01b03191681526001600160a01b0393841660048201526024810192909252909116604482015260640160006040518083038186803b1580156102f457600080fd5b505af4158015610308573d6000803e3d6000fd5b50505050606081015115610431578351606001516001600160a01b0316632fb12605826000015161033b87516020015190565b846020015161034f89604001516020015190565b6040518563ffffffff1660e01b815260040161036e9493929190611831565b600060405180830381600087803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b505050506103ac84516060015190565b6001600160a01b0316632fb1260582604001516103cb87516020015190565b60608501516040890151602001516040518563ffffffff1660e01b81526004016103f89493929190611831565b600060405180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b505050505050505050565b835160a00151516000036104ce578351606001516001600160a01b0316632fb12605826000015161046487516020015190565b846020015161047889604001516020015190565b6040518563ffffffff1660e01b81526004016104979493929190611831565b600060405180830381600087803b1580156104b157600080fd5b505af11580156104c5573d6000803e3d6000fd5b505050506106b2565b8460000151608001516001600160a01b0316630d51d86a6040518061014001604052808860000151600001516001600160a01b031681526020018860000151602001516001600160a01b031681526020018860000151606001516001600160a01b0316815260200161054288516060015190565b6001600160a01b0316815260200184600001516001600160a01b0316815260200184602001518152602001886060015181526020016105878860200151610100015190565b815260200161059888516020015190565b6001600160a01b031681526020016105b588604001516020015190565b15158152506040518263ffffffff1660e01b81526004016105d69190611894565b60408051808303816000875af1925050508015610610575060408051601f3d908101601f1916820190925261060d91810190611950565b60015b6106af5761061c61197e565b806308c379a00361065c575061063061199a565b8061063b575061065e565b610656858383604051806020016040528060008152506108fa565b506106b2565b505b3d808015610688576040519150601f19603f3d011682016040523d82523d6000602084013e61068d565b606091505b506000610699826109c3565b5090506106a8868483856108fa565b50506106b2565b50505b5050505050565b80516001600160a01b03166106e1576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca6106ff8460000151610a53565b6040518263ffffffff1660e01b815260040161071d91815260200190565b602060405180830381865afa15801561073a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075e9190611a23565b9050801561078b5781516040516309f8c93760e01b81526107829190600401611a40565b60405180910390fd5b505050565b60208101516001600160a01b03166107be57805160405163182e30e360e01b81526107829190600401611a40565b50565b60208101515115806107d857506020808201510151155b806107e95750602081015160400151155b156107be5760208181015180519181015160409182015191516338b3364f60e21b8152600481019390935260248301526044820152606401610782565b600484600781111561083a5761083a611505565b0361084f5761084a868685610ad5565b6108f2565b600584600781111561086357610863611505565b14806108805750600684600781111561087e5761087e611505565b145b156108b65760008284116108945782610896565b835b90506108a28782610aef565b6108b0576108b08782610b44565b506108f2565b60078460078111156108ca576108ca611505565b036108ea5760008183116108de5781610896565b50816108a28782610aef565b6108f2610b60565b505050505050565b7f8eed4d553009f65cd0ea6bdf148a04a9ac36a2921765af4bc8e83d866ead5bc7828260405161092b929190611aa4565b60405180910390a18351606001516001600160a01b0316632fb12605846000015161095887516020015190565b866020015161096c89604001516020015190565b6040518563ffffffff1660e01b815260040161098b9493929190611831565b600060405180830381600087803b1580156109a557600080fd5b505af11580156109b9573d6000803e3d6000fd5b5050505050505050565b606060006044835110156109ea575050604080516020810190915260008082529092909150565b60006109f7846020015190565b90506307b9e43360e51b6001600160e01b0319821601610a365760048401935083806020019051810190610a2b9190611ad2565b946001945092505050565b600060405180602001604052806000815250909250925050915091565b6000604051602001610a8b906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b610ae0838383610b79565b61078b5761078b838383610bb2565b6000805b8351811015610b385782848281518110610b0f57610b0f611b69565b602002602001015111610b26576000915050610b3e565b80610b3081611b7f565b915050610af3565b50600190505b92915050565b818160405162f2302f60e71b8152600401610782929190611bd6565b60405163c1c0083160e01b815260040160405180910390fd5b6000610b858483610bd1565b610b9157506000610bab565b610b9b8383610c1b565b610ba757506000610bab565b5060015b9392505050565b828282604051633e0fa80560e11b815260040161078293929190611bf8565b6000805b8351811015610b385782848281518110610bf157610bf1611b69565b60200260200101511115610c09576000915050610b3e565b80610c1381611b7f565b915050610bd5565b6000805b8351811015610b385782848281518110610c3b57610c3b611b69565b60200260200101511015610c53576000915050610b3e565b80610c5d81611b7f565b915050610c1f565b634e487b7160e01b600052604160045260246000fd5b60c081016001600160401b0381118282101715610c9a57610c9a610c65565b60405250565b606081016001600160401b0381118282101715610c9a57610c9a610c65565b601f8201601f191681016001600160401b0381118282101715610ce457610ce4610c65565b6040525050565b60405161014081016001600160401b0381118282101715610d0e57610d0e610c65565b60405290565b6001600160a01b03811681146107be57600080fd5b8035610d3481610d14565b919050565b600060c08284031215610d4b57600080fd5b604051610d5781610c7b565b8091508235610d6581610d14565b81526020830135610d7581610d14565b60208201526040830135610d8881610d14565b60408201526060830135610d9b81610d14565b60608201526080830135610dae81610d14565b608082015260a0830135610dc181610d14565b60a0919091015292915050565b60006001600160401b03821115610de757610de7610c65565b5060051b60200190565b600082601f830112610e0257600080fd5b81356020610e0f82610dce565b604051610e1c8282610cbf565b83815260059390931b8501820192828101915086841115610e3c57600080fd5b8286015b84811015610e60578035610e5381610d14565b8352918301918301610e40565b509695505050505050565b803560088110610d3457600080fd5b803560038110610d3457600080fd5b60006101408284031215610e9c57600080fd5b610ea4610ceb565b9050610eaf82610e6b565b8152610ebd60208301610e7a565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b80151581146107be57600080fd5b600060608284031215610f3c57600080fd5b604051610f4881610ca0565b8091508235610f5681610f1c565b81526020830135610f6681610f1c565b60208201526040830135610f7981610f1c565b6040919091015292915050565b60006101c08284031215610f9957600080fd5b604051610fa581610ca0565b90508082356001600160401b0380821115610fbf57600080fd5b9084019060c08287031215610fd357600080fd5b604051610fdf81610c7b565b8235610fea81610d14565b8152610ff860208401610d29565b602082015261100960408401610d29565b604082015261101a60608401610d29565b606082015261102b60808401610d29565b608082015260a08301358281111561104257600080fd5b61104e88828601610df1565b60a08301525083525061106690508460208501610e89565b6020820152611079846101608501610f2a565b60408201525092915050565b60006080828403121561109757600080fd5b604051608081016001600160401b03811182821017156110b9576110b9610c65565b60405290508082356110ca81610d14565b815260208301356110da81610d14565b602082015260408301356110ed81610d14565b6040820152606083013561110081610d14565b6060919091015292915050565b600082601f83011261111e57600080fd5b8135602061112b82610dce565b6040516111388282610cbf565b83815260079390931b850182019282810191508684111561115857600080fd5b8286015b84811015610e605761116e8882611085565b83529183019160800161115c565b600082601f83011261118d57600080fd5b8135602061119a82610dce565b6040516111a78282610cbf565b83815260059390931b85018201928281019150868411156111c757600080fd5b8286015b84811015610e6057803583529183019183016111cb565b6000602082840312156111f457600080fd5b81356001600160401b038082111561120b57600080fd5b90830190610240828603121561122057600080fd5b611228610ceb565b6112328684610d39565b815260c0830135602082015260e08301358281111561125057600080fd5b61125c87828601610f86565b604083015250610100808401358381111561127657600080fd5b6112828882870161110d565b606084015250610120808501358481111561129c57600080fd5b6112a88982880161117c565b608085015250610140850135848111156112c157600080fd5b6112cd8982880161117c565b60a0850152506112e1886101608701611085565b60c08401526112f36101e08601610d29565b60e08401526102008501358284015261022085013581840152505080935050505092915050565b6001600160a01b03169052565b60006020828403121561133957600080fd5b604051602081016001600160401b038111828210171561135b5761135b610c65565b8060405250809150825161136e81610f1c565b905292915050565b600081830361018081121561138a57600080fd5b6040805161139781610ca0565b60608312156113a557600080fd5b81516113b081610ca0565b85516113bb81610d14565b815260208601516113cb81610d14565b6020820152858301516113dd81610d14565b818401528152610100605f1984018113156113f757600080fd5b825193508084016001600160401b038111858210171561141957611419610c65565b80845250606086015184526080860151602085015260a08601518385015260c0860151606085015260e086015160808501528086015160a08501525061012085015160c084015261014085015160e084015282602082015261147f866101608701611327565b91810191909152949350505050565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b600081518084526020808501945080840160005b838110156114fa5781516001600160a01b0316875295820195908201906001016114d5565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b6008811061152b5761152b611505565b9052565b6003811061152b5761152b611505565b61154a82825161151b565b602081015161155c602084018261152f565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b80516101c080845281516001600160a01b0390811691850191909152602082015181166101e0850152604082015181166102008501526060820151811661022085015260808201511661024084015260a0015160c06102608401526000906116216102808501826114c1565b90506020830151611635602086018261153f565b5060408381015180511515610160870152602081015115156101808701529081015115156101a0860152509392505050565b805160018060a01b03808251168452806020830151166020850152806040830151166040850152505060208101518051606084015260208101516080840152604081015160a0840152606081015160c0840152608081015160e084015260a081015161010084015260c081015161012084015260e081015161014084015250604081015161078b6101608401825115159052565b602081526000825160018060a01b038082511660208501528060208301511660408501528060408301511660608501528060608301511660808501528060808301511660a08501525060a0810151905061175860c084018261131a565b50602083015161176b60e084018261148e565b506040830151610320806101608501526117896103408501836115b5565b9150606085015161018085015260808501516117a96101a0860182611667565b5060a0949094015192909301919091525090565b6000608082840312156117cf57600080fd5b604051608081016001600160401b03811182821017156117f1576117f1610c65565b60405282516117ff81610d14565b815260208381015190820152604083015161181981610d14565b60408201526060928301519281019290925250919050565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b600081518084526020808501945080840160005b838110156114fa5761188187835161148e565b608096909601959082019060010161186e565b602081526118a660208201835161131a565b600060208301516118ba604084018261131a565b5060408301516118cd606084018261131a565b5060608301516118e0608084018261131a565b5060808301516118f360a084018261131a565b5060a083015160c083015260c08301516101408060e085015261191a61016085018361185a565b60e08601516101008681019190915286015190925061012061193e8187018361131a565b90950151151593019290925250919050565b6000806040838503121561196357600080fd5b825161196e81610d14565b6020939093015192949293505050565b600060033d11156119975760046000803e5060005160e01c5b90565b600060443d10156119a85790565b6040516003193d81016004833e81513d6001600160401b0380831160248401831017156119d757505050505090565b82850191508151818111156119ef5750505050505090565b843d8701016020828501011115611a095750505050505090565b611a1860208286010187610cbf565b509095945050505050565b600060208284031215611a3557600080fd5b8151610bab81610f1c565b6001600160a01b0391909116815260200190565b60005b83811015611a6f578181015183820152602001611a57565b50506000910152565b60008151808452611a90816020860160208601611a54565b601f01601f19169290920160200192915050565b604081526000611ab76040830185611a78565b8281036020840152611ac98185611a78565b95945050505050565b600060208284031215611ae457600080fd5b81516001600160401b0380821115611afb57600080fd5b818401915084601f830112611b0f57600080fd5b815181811115611b2157611b21610c65565b6040519150611b3a601f8201601f191660200183610cbf565b808252856020828501011115611b4f57600080fd5b611b60816020840160208601611a54565b50949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611b9f57634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b838110156114fa57815187529582019590820190600101611bba565b604081526000611be96040830185611ba6565b90508260208301529392505050565b606081526000611c0b6060830186611ba6565b8281036020840152611c1d8186611ba6565b91505082604083015294935050505056fea2646970667358221220b167f9d7bc5085d1a90eb48156631c00081f7f5a80575a2b39fb35899e3ea1df64736f6c63430008100033";

type DecreaseOrderUtilsConstructorParams =
  | [linkLibraryAddresses: DecreaseOrderUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DecreaseOrderUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DecreaseOrderUtils__factory extends ContractFactory {
  constructor(...args: DecreaseOrderUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DecreaseOrderUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DecreaseOrderUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d31b232fb363902662fbc281b11ab3357\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$34af2f45da6b13f877428397704b7865d6\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/DecreasePositionUtils.sol:DecreasePositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DecreaseOrderUtils> {
    return super.deploy(overrides || {}) as Promise<DecreaseOrderUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DecreaseOrderUtils {
    return super.attach(address) as DecreaseOrderUtils;
  }
  override connect(signer: Signer): DecreaseOrderUtils__factory {
    return super.connect(signer) as DecreaseOrderUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DecreaseOrderUtilsInterface {
    return new utils.Interface(_abi) as DecreaseOrderUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DecreaseOrderUtils {
    return new Contract(address, _abi, signerOrProvider) as DecreaseOrderUtils;
  }
}

export interface DecreaseOrderUtilsLibraryAddresses {
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/position/DecreasePositionUtils.sol:DecreasePositionUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
