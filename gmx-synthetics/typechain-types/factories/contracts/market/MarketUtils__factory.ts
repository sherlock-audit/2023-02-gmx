/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MarketUtils,
  MarketUtilsInterface,
} from "../../../contracts/market/MarketUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "adjustedClaimableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "CollateralAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientPoolAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reservedUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxReservedUsd",
        type: "uint256",
      },
    ],
    name: "InsufficientReserve",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "InvalidCollateralTokenForMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidPositionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "openInterest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxOpenInterest",
        type: "uint256",
      },
    ],
    name: "MaxOpenInterestExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPoolAmount",
        type: "uint256",
      },
    ],
    name: "MaxPoolAmountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "OpenInterestCannotBeUpdatedForSwapOnlyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactor",
        type: "uint256",
      },
    ],
    name: "PnlFactorExceededForLongs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactor",
        type: "uint256",
      },
    ],
    name: "PnlFactorExceededForShorts",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToGetBorrowingFactorEmptyPoolUsd",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetCachedTokenPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToGetFundingFactorEmptyOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetOppositeToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionBorrowingFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeBorrowingFactor",
        type: "uint256",
      },
    ],
    name: "UnexpectedBorrowingFactor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "poolValue",
        type: "int256",
      },
    ],
    name: "UnexpectedPoolValueForTokenPriceCalculation",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedSupplyForTokenPriceCalculation",
    type: "error",
  },
];

const _bytecode =
  "0x61267661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80631450a87914610050578063b656ff7a14610072578063c323935014610092575b600080fd5b81801561005c57600080fd5b5061007061006b3660046123e7565b6100b2565b005b81801561007e57600080fd5b5061007061008d366004612454565b61015b565b81801561009e57600080fd5b506100706100ad3660046124c0565b610185565b60006100c086858585610289565b9150506100d48686866000015185856102ed565b856001600160a01b031663e2a4853a6100f18660000151856103fd565b426040518363ffffffff1660e01b815260040161010f92919061251b565b6020604051808303816000875af115801561012e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101529190612529565b50505050505050565b600061016c888888888888886104a4565b905061017a888888846104eb565b505050505050505050565b6000610192858484610572565b90506101af85858560000151866040015160018660200151610a1f565b506101cb85858560000151866040015160008660400151610a1f565b506101e785858560000151866060015160018660600151610a1f565b5061020385858560000151866060015160008660800151610a1f565b50846001600160a01b031663e2a4853a6102208560000151610b32565b426040518363ffffffff1660e01b815260040161023e92919061251b565b6020604051808303816000875af115801561025d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102819190612529565b505050505050565b600080600061029d87876000015186610bb4565b905060006102ad88888888610be9565b905060006102c089896000015188610c99565b905060006102ce8385612558565b905060006102dc8284612577565b9b919a509098505050505050505050565b6000856001600160a01b031663340dbab36103088686610d13565b846040518363ffffffff1660e01b815260040161032692919061251b565b6020604051808303816000875af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190612529565b60405163d206b70560e01b81526001600160a01b038088166004830152861660248201528415156044820152606481018490526084810182905290915073__$c1eebf06e53d0bd092f667687cf73e1ebf$__9063d206b7059060a40160006040518083038186803b1580156103dd57600080fd5b505af41580156103f1573d6000803e3d6000fd5b50505050505050505050565b600060405160200161044f9060208082526026908201527f43554d554c41544956455f424f52524f57494e475f464143544f525f5550444160408201526515115117d05560d21b606082015260800190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0385169082015282151560608201526080015b6040516020818303038152906040528051906020012090505b92915050565b6000806104b2898989610d54565b90506104be8587612558565b6104c8908261258a565b90506104d48385612558565b6104de9082612577565b9998505050505050505050565b6000846001600160a01b031663e2a4853a6105068686610d6b565b846040518363ffffffff1660e01b815260040161052492919061251b565b6020604051808303816000875af1158015610543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105679190612529565b90505b949350505050565b61057a61214d565b61058261214d565b61058a61217e565b61059f86866000015187604001516001610da0565b815152845160608601516105b69188916001610da0565b815160200152845160408601516105d09188916000610da0565b815160400152845160608601516105ea9188916000610da0565b8151606001528051602081015190516106039190612577565b815160800152805160608101516040909101516106209190612577565b815160a001528451604086015161063a9188916001610df7565b6020830152845160408601516106539188916000610df7565b60408301528451606086015161066c9188916001610df7565b82606001818152505061068a86866000015187606001516000610df7565b6080808401919091528151015115806106a65750805160a00151155b156106b357509050610a18565b6106c1868660000151610e13565b60408201528051608081015160a0909101516106dd9190610eab565b6060820152805160a08101516080909101516106f99190612577565b608080830191909152815160a08101519101511161071c57805160a00151610723565b8051608001515b60a08201528451606082015160808301516107419289929091610ecd565b60c08201819052604082015160a08301516107699068327cb2734119d3b7a9601e1b906125b3565b6107739190612558565b61077d9190612558565b60e0820152805160a081015160809091015111808352156107f15780516080810151905160e08301516107b09190612558565b6107ba91906125b3565b6101008201528051608081015160209091015160e08301516107dc9190612558565b6107e691906125b3565b61012082015261084a565b805160a081015160409091015160e083015161080d9190612558565b61081791906125b3565b610100820152805160a081015160609091015160e08301516108399190612558565b61084391906125b3565b6101208201525b61087184602001516020015182610100015161086691906125b3565b825160800151610f42565b602080830151608001919091528481015101516101008201516108a291610897916125b3565b825160a00151610f42565b60208083015160c00191909152604085015101516101208201516108c991610866916125b3565b60208083015160a00191909152604085015101516101208201516108f091610897916125b3565b602082015160e001528151156109915761091e8260200151610919836020015160800151610f4e565b610fc1565b8260200181815250506109458260400151610940836020015160c00151610f4e565b61107a565b60408301526060820151602082015160a00151610966919061091990610f4e565b60608301526080820151602082015160e00151610987919061094090610f4e565b6080830152610a14565b6109aa8260200151610940836020015160800151610f4e565b8260200181815250506109cc8260400151610919836020015160c00151610f4e565b60408301526060820151602082015160a001516109ed919061094090610f4e565b60608301526080820151602082015160e00151610a0e919061091990610f4e565b60808301525b5090505b9392505050565b604051637a29370360e01b81526001600160a01b03808716600483015280861660248301528416604482015282151560648201526084810182905260009073__$c1eebf06e53d0bd092f667687cf73e1ebf$";

type MarketUtilsConstructorParams =
  | [linkLibraryAddresses: MarketUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MarketUtils__factory extends ContractFactory {
  constructor(...args: MarketUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MarketUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MarketUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c1eebf06e53d0bd092f667687cf73e1ebf\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketEventUtils.sol:MarketEventUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketUtils> {
    return super.deploy(overrides || {}) as Promise<MarketUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketUtils {
    return super.attach(address) as MarketUtils;
  }
  override connect(signer: Signer): MarketUtils__factory {
    return super.connect(signer) as MarketUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketUtilsInterface {
    return new utils.Interface(_abi) as MarketUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketUtils {
    return new Contract(address, _abi, signerOrProvider) as MarketUtils;
  }
}

export interface MarketUtilsLibraryAddresses {
  ["contracts/market/MarketEventUtils.sol:MarketEventUtils"]: string;
}
