/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Bank, BankInterface } from "../../../contracts/bank/Bank";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "SelfTransferNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldUnwrapNativeToken",
        type: "bool",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferOutNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610f11380380610f1183398101604081905261002f9161005e565b6001600160a01b039182166080521660a052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a051610e2b6100e660003960008181605a01528181610157015281816102c5015281816103490152818161045e01526104b501526000818161010d01526103910152610e2b6000f3fe60806040526004361061004e5760003560e01c8063078d3b79146100bb5780632fb12605146100db5780634a4a7b04146100fb578063660d0d6714610145578063d443ca941461017957600080fd5b366100b657600061007e7f0000000000000000000000000000000000000000000000000000000000000000610199565b9050336001600160a01b038216146100b4573360405163738d28df60e11b81526004016100ab9190610adf565b60405180910390fd5b005b600080fd5b3480156100c757600080fd5b506100b46100d6366004610b08565b61024c565b3480156100e757600080fd5b506100b46100f6366004610b57565b6102ac565b34801561010757600080fd5b5061012f7f000000000000000000000000000000000000000000000000000000000000000081565b60405161013c9190610adf565b60405180910390f35b34801561015157600080fd5b5061012f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018557600080fd5b506100b4610194366004610baa565b610330565b6000816001600160a01b03166321f8a7216040516020016101d19060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161020591815260200190565b602060405180830381865afa158015610222573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102469190610bd6565b92915050565b61029c60405160200161025e90610bfa565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b81525061037a565b6102a783838361042e565b505050565b6102be60405160200161025e90610bfa565b60006102e97f0000000000000000000000000000000000000000000000000000000000000000610199565b9050806001600160a01b0316856001600160a01b03161480156103095750815b1561031e57610319858585610485565b610329565b61032985858561042e565b5050505050565b61034260405160200161025e90610bfa565b600061036d7f0000000000000000000000000000000000000000000000000000000000000000610199565b90506102a7818484610485565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906103c89033908690600401610c1e565b602060405180830381865afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104099190610c37565b61042a57338160405163a35b150b60e01b81526004016100ab929190610ca4565b5050565b306001600160a01b038316036104595781604051637387c8a960e11b81526004016100ab9190610adf565b6102a77f00000000000000000000000000000000000000000000000000000000000000008484846104dc565b306001600160a01b038316036104b05781604051637387c8a960e11b81526004016100ab9190610adf565b6102a77f000000000000000000000000000000000000000000000000000000000000000084848461060a565b8015610601576104eb826107b5565b6000846001600160a01b031663bd02d0f5610505866107dc565b6040518263ffffffff1660e01b815260040161052391815260200190565b602060405180830381865afa158015610540573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105649190610cd0565b905060008061057586868686610864565b91509150811561058757505050610601565b6000610592826109cc565b5090507fc9f14d9a0a9b46470c7c0b6c508f8283abaab7f795f153953c58cd4250824dae81836040516105c6929190610ce9565b60405180910390a160405163012f3b8f60e71b81526001600160a01b03808916600483015287166024820152604481018690526064016100ab565b50505050565b50565b801561060157610619826107b5565b604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b505050506000846001600160a01b031663bd02d0f56040516020016106c5906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016106f991815260200190565b602060405180830381865afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610cd0565b90506000836001600160a01b0316838390604051600060405180830381858888f193505050503d806000811461078c576040519150601f19603f3d011682016040523d82523d6000602084013e610791565b606091505b5050905080156107a2575050610601565b6107ad868585610a5c565b505050505050565b6001600160a01b0381166106075760405163d551823d60e01b815260040160405180910390fd5b600060405160200161081a906020808252601890820152771513d2d15397d514905394d1915497d1d054d7d31253525560421b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b60006060600063a9059cbb60e01b8686604051602401610885929190610c1e565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080886001600160a01b031686846040516108d69190610d17565b60006040518083038160008787f1925050503d8060008114610914576040519150601f19603f3d011682016040523d82523d6000602084013e610919565b606091505b509150915081156109ba578051600003610977576001600160a01b0389163b6109775760006040518060400160405280601481526020017310d85b1b081d1bc81b9bdb8b58dbdb9d1c9858dd60621b815250945094505050506109c3565b600081511180156109995750808060200190518101906109979190610c37565b155b156109ac576000945092506109c3915050565b6001945092506109c3915050565b60009450925050505b94509492505050565b606060006044835110156109f3575050604080516020810190915260008082529092909150565b6000610a00846020015190565b90506307b9e43360e51b6001600160e01b0319821601610a3f5760048401935083806020019051810190610a349190610d49565b946001945092505050565b600060405180602001604052806000815250909250925050915091565b80600003610a6957505050565b610a72826107b5565b6000610a7d84610199565b9050806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610aba57600080fd5b505af1158015610ace573d6000803e3d6000fd5b5050505050610601848285856104dc565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461060757600080fd5b600080600060608486031215610b1d57600080fd5b8335610b2881610af3565b92506020840135610b3881610af3565b929592945050506040919091013590565b801515811461060757600080fd5b60008060008060808587031215610b6d57600080fd5b8435610b7881610af3565b93506020850135610b8881610af3565b9250604085013591506060850135610b9f81610b49565b939692955090935050565b60008060408385031215610bbd57600080fd5b8235610bc881610af3565b946020939093013593505050565b600060208284031215610be857600080fd5b8151610bf381610af3565b9392505050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215610c4957600080fd5b8151610bf381610b49565b60005b83811015610c6f578181015183820152602001610c57565b50506000910152565b60008151808452610c90816020860160208601610c54565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090610cc890830184610c78565b949350505050565b600060208284031215610ce257600080fd5b5051919050565b604081526000610cfc6040830185610c78565b8281036020840152610d0e8185610c78565b95945050505050565b60008251610d29818460208701610c54565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610d5b57600080fd5b81516001600160401b0380821115610d7257600080fd5b818401915084601f830112610d8657600080fd5b815181811115610d9857610d98610d33565b604051601f8201601f19908116603f01168101908382118183101715610dc057610dc0610d33565b81604052828152876020848701011115610dd957600080fd5b610dea836020830160208801610c54565b97965050505050505056fea2646970667358221220f857b1db538517daeb0a3878d650e48a4dc2a98a1d99c3e617f08f4bae9d470c64736f6c63430008100033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(
      _roleStore,
      _dataStore,
      overrides || {}
    ) as Promise<Bank>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
