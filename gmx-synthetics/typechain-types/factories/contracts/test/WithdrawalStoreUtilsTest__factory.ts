/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WithdrawalStoreUtilsTest,
  WithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/WithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "setWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061076c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063ab4f9d7f14610046578063b2dd62bd1461005b578063fb909db31461006e575b600080fd5b610059610054366004610210565b61008c565b005b6100596100693660046103ff565b61010c565b610076610147565b60405161008391906105c0565b60405180910390f35b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__906374b6fe13906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b50505050505050565b604051631a9d46f160e21b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__90636a751bc4906100d790869086908690600401610673565b61014f61015c565b61015761015c565b919050565b604080516101208101909152600060608083018281526080840183905260a0840183905260c084019290925260e08301819052610100830152819081526020016101d56040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b6001600160a01b038116811461020257600080fd5b50565b8035610157816101ed565b60008060006060848603121561022557600080fd5b8335610230816101ed565b9250602084013591506040840135610247816101ed565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561028a5761028a610252565b60405290565b604051606081016001600160401b038111828210171561028a5761028a610252565b600082601f8301126102c357600080fd5b813560206001600160401b03808311156102df576102df610252565b8260051b604051601f19603f8301168101818110848211171561030457610304610252565b60405293845285810183019383810192508785111561032257600080fd5b83870191505b8482101561034a57813561033b816101ed565b83529183019190830190610328565b979650505050505050565b600060c0828403121561036757600080fd5b61036f610268565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b6000602082840312156103bf57600080fd5b604051602081016001600160401b03811182821017156103e1576103e1610252565b604052905080823580151581146103f757600080fd5b905292915050565b60008060006060848603121561041457600080fd5b833561041f816101ed565b92506020840135915060408401356001600160401b038082111561044257600080fd5b90850190610100828803121561045757600080fd5b61045f610290565b82358281111561046e57600080fd5b830160c0818a03121561048057600080fd5b610488610268565b61049182610205565b815261049f60208301610205565b60208201526104b060408301610205565b60408201526104c160608301610205565b60608201526080820135848111156104d857600080fd5b6104e48b8285016102b2565b60808301525060a0820135848111156104fc57600080fd5b6105088b8285016102b2565b60a08301525082525061051e8860208501610355565b60208201526105308860e085016103ad565b60408201528093505050509250925092565b600081518084526020808501945080840160005b8381101561057b5781516001600160a01b031687529582019590820190600101610556565b509495945050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b602081526000825161010080602085015260018060a01b038083511661012086015280602084015116610140860152806040840151166101608601528060608401511661018086015250608082015160c06101a08601526106256101e0860182610542565b905060a0830151925061011f19858203016101c08601526106468184610542565b925050602085015161065b6040860182610586565b50604085015180511515858301525090949350505050565b6001600160a01b0384811682526020808301859052606060408085018290528551610100838701528051851661016087015292830151841661018086015282015183166101a08501528101519091166101c0830152608081015160c06101e08401526000916106e6610220850183610542565b915060a0810151905061015f19848303016102008501526107078282610542565b915050602084015161071c6080850182610586565b50604084015180511515610140850152509594505050505056fea264697066735822122043e6798fe28fa669bf9c5b5c689e2239bb7ca800b86e40aba689f3331a97343f64736f6c63430008100033";

type WithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: WithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<WithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawalStoreUtilsTest {
    return super.attach(address) as WithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): WithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as WithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as WithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawalStoreUtilsTest;
  }
}

export interface WithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
