/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrderStoreUtilsTest,
  OrderStoreUtilsTestInterface,
} from "../../../contracts/test/OrderStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
    ],
    name: "setOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a1a0422146100465780638074eb2f1461005b578063e23e70381461006e575b600080fd5b610059610054366004610238565b61008c565b005b6100596100693660046104cf565b61010c565b610076610147565b6040516100839190610719565b60405180910390f35b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906374b6fe13906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b50505050505050565b604051630c154e0d60e31b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906360aa7068906100d7908690869086906004016107bb565b61014f61015c565b61015761015c565b919050565b604080516101208101909152600060608083018281526080840183905260a0840183905260c0840183905260e08401929092526101008301528152602081016101f260408051610140810190915280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260408051606081018252600080825260208281018290529282015291015290565b6001600160a01b038116811461022a57600080fd5b50565b803561015781610215565b60008060006060848603121561024d57600080fd5b833561025881610215565b925060208401359150604084013561026f81610215565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156102b3576102b361027a565b60405290565b604051606081016001600160401b03811182821017156102b3576102b361027a565b60405160c081016001600160401b03811182821017156102b3576102b361027a565b600082601f83011261030e57600080fd5b813560206001600160401b038083111561032a5761032a61027a565b8260051b604051601f19603f8301168101818110848211171561034f5761034f61027a565b60405293845285810183019383810192508785111561036d57600080fd5b83870191505b8482101561039557813561038681610215565b83529183019190830190610373565b979650505050505050565b80356008811061015757600080fd5b80356003811061015757600080fd5b600061014082840312156103d157600080fd5b6103d9610290565b90506103e4826103a0565b81526103f2602083016103af565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b8035801515811461015757600080fd5b60006060828403121561047357600080fd5b604051606081016001600160401b03811182821017156104955761049561027a565b6040529050806104a483610451565b81526104b260208401610451565b60208201526104c360408401610451565b60408201525092915050565b6000806000606084860312156104e457600080fd5b83356104ef81610215565b92506020840135915060408401356001600160401b038082111561051257600080fd5b908501906101c0828803121561052757600080fd5b61052f6102b9565b82358281111561053e57600080fd5b830160c0818a03121561055057600080fd5b6105586102db565b813561056381610215565b8152602082013561057381610215565b6020820152604082013561058681610215565b60408201526105976060830161022d565b60608201526105a86080830161022d565b608082015260a0820135848111156105bf57600080fd5b6105cb8b8285016102fd565b60a0830152508252506105e188602085016103be565b60208201526105f4886101608501610461565b60408201528093505050509250925092565b600081518084526020808501945080840160005b8381101561063f5781516001600160a01b03168752958201959082019060010161061a565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b600881106106705761067061064a565b9052565b600381106106705761067061064a565b61068f828251610660565b60208101516106a16020840182610674565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b8051151582526020808201511515908301526040908101511515910152565b602080825282516101c08383015280516001600160a01b039081166101e08501529181015182166102008401526040810151821661022084015260608101518216610240840152608081015190911661026083015260a0015160c061028083015260009061078b6102a0840182610606565b9050602084015161079f6040850182610684565b5060408401516107b36101808501826106fa565b509392505050565b600060018060a01b0380861683528460208401526060604084015283516101c080606086015282825116610220860152826020830151166102408601528260408301511661026086015282606083015116610280860152826080830151166102a086015260a0820151925060c06102c086015261083c6102e0860184610606565b9250602086015191506108526080860183610684565b60408601519150610865818601836106fa565b5090969550505050505056fea2646970667358221220bcacfb254203a762561a32435954ae1f0ee0385c3fc57a3c36f77418888e5edb64736f6c63430008100033";

type OrderStoreUtilsTestConstructorParams =
  | [linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OrderStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: OrderStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OrderStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<OrderStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderStoreUtilsTest {
    return super.attach(address) as OrderStoreUtilsTest;
  }
  override connect(signer: Signer): OrderStoreUtilsTest__factory {
    return super.connect(signer) as OrderStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderStoreUtilsTestInterface {
    return new utils.Interface(_abi) as OrderStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderStoreUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as OrderStoreUtilsTest;
  }
}

export interface OrderStoreUtilsTestLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
