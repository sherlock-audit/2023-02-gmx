/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OracleStore,
  OracleStoreInterface,
} from "../../../contracts/oracle/OracleStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getSigners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161081a38038061081a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107896100916000396000818160aa015261024c01526107896000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e316ab7146100675780633ffefe4e1461007c5780634a4a7b04146100a5578063b715be81146100cc578063daf6faa6146100e2578063eb12d61e14610102575b600080fd5b61007a610075366004610566565b610115565b005b61008f61008a36600461058f565b6101ab565b60405161009c91906105a8565b60405180910390f35b61008f7f000000000000000000000000000000000000000000000000000000000000000081565b6100d46101bd565b60405190815260200161009c565b6100f56100f03660046105bc565b6101ce565b60405161009c91906105de565b61007a610110366004610566565b6101e3565b6101656040516020016101279061062b565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610230565b6101706000826102ed565b507f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b816040516101a091906105a8565b60405180910390a150565b60006101b78183610302565b92915050565b60006101c9600061030e565b905090565b60606101dc60008484610318565b9392505050565b6101f56040516020016101279061062b565b6102006000826103e5565b507f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24816040516101a091906105a8565b60405163ac4ab3fb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ac4ab3fb90604401602060405180830381865afa15801561029b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bf919061064f565b6102e957338160405163a35b150b60e01b81526004016102e0929190610671565b60405180910390fd5b5050565b60006101dc836001600160a01b0384166103fa565b60006101dc83836104ed565b60006101b7825490565b606060006103258561030e565b905080831115610333578092505b600061033f85856106e5565b6001600160401b03811115610356576103566106f8565b60405190808252806020026020018201604052801561037f578160200160208202803683370190505b509050845b848110156103db576103968782610302565b826103a188846106e5565b815181106103b1576103b161070e565b6001600160a01b0390921660209283029190910190910152806103d381610724565b915050610384565b5095945050505050565b60006101dc836001600160a01b038416610517565b600081815260018301602052604081205480156104e357600061041e6001836106e5565b8554909150600090610432906001906106e5565b90508181146104975760008660000182815481106104525761045261070e565b90600052602060002001549050808760000184815481106104755761047561070e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806104a8576104a861073d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101b7565b60009150506101b7565b60008260000182815481106105045761050461070e565b9060005260206000200154905092915050565b600081815260018301602052604081205461055e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101b7565b5060006101b7565b60006020828403121561057857600080fd5b81356001600160a01b03811681146101dc57600080fd5b6000602082840312156105a157600080fd5b5035919050565b6001600160a01b0391909116815260200190565b600080604083850312156105cf57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561061f5783516001600160a01b0316835292840192918401916001016105fa565b50909695505050505050565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b60006020828403121561066157600080fd5b815180151581146101dc57600080fd5b60018060a01b038316815260006020604081840152835180604085015260005b818110156106ad57858101830151858201606001528201610691565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101b7576101b76106cf565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610736576107366106cf565b5060010190565b634e487b7160e01b600052603160045260246000fdfea264697066735822122095b4b1f4eced7cb3962f24326bd8f41ab4139a75cd0719e21420fcfd553419c064736f6c63430008100033";

type OracleStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleStore__factory extends ContractFactory {
  constructor(...args: OracleStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OracleStore> {
    return super.deploy(_roleStore, overrides || {}) as Promise<OracleStore>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, overrides || {});
  }
  override attach(address: string): OracleStore {
    return super.attach(address) as OracleStore;
  }
  override connect(signer: Signer): OracleStore__factory {
    return super.connect(signer) as OracleStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleStoreInterface {
    return new utils.Interface(_abi) as OracleStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleStore {
    return new Contract(address, _abi, signerOrProvider) as OracleStore;
  }
}
