/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AdlHandler,
  AdlHandlerInterface,
} from "../../../contracts/exchange/AdlHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract OrderVault",
        name: "_orderVault",
        type: "address",
      },
      {
        internalType: "contract Oracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract SwapHandler",
        name: "_swapHandler",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "_referralStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactorForAdl",
        type: "uint256",
      },
    ],
    name: "AdlNotRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "compactedValues",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slotIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "CompactedArrayOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedBlockNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EndOfOracleSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "nextPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
    ],
    name: "InvalidAdl",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "primaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "primaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidPrimaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secondaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidSecondaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "nextPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "minPnlFactorForAdl",
        type: "uint256",
      },
    ],
    name: "PnlOvercorrected",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "OracleError",
    type: "event",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "signerInfo",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleTimestamps",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedDecimals",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "priceFeedTokens",
            type: "address[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeAdl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract Oracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [
      {
        internalType: "contract OrderVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralStorage",
    outputs: [
      {
        internalType: "contract IReferralStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [
      {
        internalType: "contract SwapHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "signerInfo",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleTimestamps",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedDecimals",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "priceFeedTokens",
            type: "address[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "updateAdlState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620036e1380380620036e1833981016040819052620000359162000085565b6001600160a01b0395861660805295851660a05292841660c05290831660e052821661012052811661010052166101405262000130565b6001600160a01b03811681146200008257600080fd5b50565b600080600080600080600060e0888a031215620000a157600080fd5b8751620000ae816200006c565b6020890151909750620000c1816200006c565b6040890151909650620000d4816200006c565b6060890151909550620000e7816200006c565b6080890151909450620000fa816200006c565b60a08901519093506200010d816200006c565b60c089015190925062000120816200006c565b8091505092959891949750929550565b60805160a05160c05160e05161010051610120516101405161348e6200025360003960008181608c015261103301526000818161012c0152818161023001528181610475015281816107b20152818161090001528181610a570152610fdd015260008181610153015261100801526000818161017a0152610fb20152600081816101a101528181610272015281816105870152818161094201528181610a350152610f8701526000818160c90152610cef01526000818160f001528181610251015281816103f3015281816104540152818161055801528181610791015281816108140152818161092101528181610a1301528181610b1d01528181610c2001528181610ea401528181610f2501528181610f5f015261142c015261348e6000f3fe608060405234801561001057600080fd5b50600436106100825760003560e01c80626cc35e146100875780634a4a7b04146100c4578063660d0d67146100eb5780637b881883146101125780637dc0d1d0146101275780638a53aaac1461014e57806393845e46146101755780639ff78c301461019c578063d944d587146101c3575b600080fd5b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100bb91906122f1565b60405180910390f35b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b610125610120366004612341565b6101d6565b005b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b6100ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101256101d13660046123d0565b6108e4565b6101de610b19565b61022e6040516020016101f090612431565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016920a2262fa5a2a2a822a960b11b815250610cd8565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061029a84612700565b60405163df02681160e01b81526001600160a01b0385169063df026811906102ca908690869086906004016129de565b600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b5050505061035060405180610120016040528060008152602001606081526020016060815260200160008019168152602001600015158152602001600081526020016000815260200160008152602001600081525090565b5a81526103a96103636040880188612b4e565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506103a2925050506020890189612b4e565b9050610d88565b60208201526103be6103636060880188612b4e565b6040808301829052516385671ac560e01b815273__$f1c6d6b2bd25207c7e7320f7c6bcfa9419$__916385671ac59161041f917f0000000000000000000000000000000000000000000000000000000000000000918f918e91600401612b97565b60006040518083038186803b15801561043757600080fd5b505af415801561044b573d6000803e3d6000fd5b505050506104eb7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008c8b6040516020016104d09060208082526016908201527513505617d4139317d19050d513d497d193d497d0511360521b604082015260600190565b60405160208183030381529060405280519060200120610e1e565b60a084015260c0830152151560808201819052610530578060c001518160a001516040516368376c5f60e11b8152600401610527929190612bd5565b60405180910390fd5b73__$f1c6d6b2bd25207c7e7320f7c6bcfa9419$__63dbadc9b96040518061010001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018e6001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b151581526020018a8152602001846020015160008151811061060657610606612be3565b6020908102919091018101519091526040805160e085811b6001600160e01b031916825284516001600160a01b039081166004840152938501518416602483015291840151831660448201526060840151831660648201526080840151909216608483015260a0830151151560a483015260c083015160c4830152919091015160e482015261010401602060405180830381865af41580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190612bf9565b606082018190526000906106f0906106e789612700565b84513390610e5e565b8051516040820151602001515191925061072591610720903090600781111561071b5761071b612c12565b6110e3565b611178565b604051630893a94f60e41b815273__$18943158f75973db0541c3d7c8650b2485$__9063893a94f09061075c908490600401612dde565b60006040518083038186803b15801561077457600080fd5b505af4158015610788573d6000803e3d6000fd5b505050506107da7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008d8c60016111a3565b60e0830181905260c08301511361080f578160e001518260c0015160405162753f0f60e61b8152600401610527929190612bd5565b61083a7f00000000000000000000000000000000000000000000000000000000000000008c8b611338565b610100830181905261084b906113bc565b8260e00151121561087c578160e00151826101000151604051634f85e3ef60e11b8152600401610527929190612bd5565b5050836001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b50505050505050506108dc61142a565b505050505050565b6108ec610b19565b6108fe6040516020016101f090612431565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061096a84612700565b60405163df02681160e01b81526001600160a01b0385169063df0268119061099a908690869086906004016129de565b600060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b5050505060006109e18680606001906103639190612b4e565b60405163e0cc1a0d60e01b815290915073__$f1c6d6b2bd25207c7e7320f7c6bcfa9419$__9063e0cc1a0d90610a85907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908e908e908990600401612f04565b60006040518083038186803b158015610a9d57600080fd5b505af4158015610ab1573d6000803e3d6000fd5b5050505050836001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610af057600080fd5b505af1158015610b04573d6000803e3d6000fd5b5050505050505050610b1461142a565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001610b5990612f48565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610b8d91815260200190565b602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190612bf9565b90508015610c1e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610527565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a604051602001610c5c90612f48565b6040516020818303038152906040528051906020012060016040518363ffffffff1660e01b8152600401610c91929190612bd5565b6020604051808303816000875af1158015610cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd49190612bf9565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610d269033908690600401612f79565b602060405180830381865afa158015610d43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d679190612f92565b610cd457338160405163a35b150b60e01b8152600401610527929190612faf565b60606000826001600160401b03811115610da457610da4612455565b604051908082528060200260200182016040528015610dcd578160200160208202803683370190505b50905060005b83811015610e1457610de585826114e3565b828281518110610df757610df7612be3565b602090810291909101015280610e0c81612fe9565b915050610dd3565b5090505b92915050565b600080600080610e2e8988611555565b90506000610e3c89836115f0565b9050610e4b8a83838a8a611766565b9450945094505050955095509592505050565b610e66612139565b610e6e612139565b6020810186905260405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390610ece907f0000000000000000000000000000000000000000000000000000000000000000908a90600401612f79565b600060405180830381865af4158015610eeb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f13919081019061317c565b604082018190525160a00151610f4a907f0000000000000000000000000000000000000000000000000000000000000000906117ba565b60608083019190915281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690915282517f0000000000000000000000000000000000000000000000000000000000000000821660209182015283517f0000000000000000000000000000000000000000000000000000000000000000831660409182015284517f0000000000000000000000000000000000000000000000000000000000000000841694019390935283517f0000000000000000000000000000000000000000000000000000000000000000831660809091015283517f000000000000000000000000000000000000000000000000000000000000000090921660a0909201919091529086015190860151516110719190610d88565b6080820152606085015160208601515161108b9190610d88565b60a0820152604081015151606001516001600160a01b0316156110c557805151604082015151606001516110bf9190611555565b60c08201525b6001600160a01b039390931660e08401525061010082015292915050565b6000604051602001611125906020808252601c908201527b11561150d5551157d0511317d191505515549157d11254d05093115160221b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03851690820152606081018390526080015b60405160208183030381529060405280519060200120905092915050565b6111828282611878565b15610cd45760405163dd70e0c960e01b815260048101829052602401610527565b6000806111b08786611555565b905060006040518060600160405280886001600160a01b0316635dcf719485602001516040518263ffffffff1660e01b81526004016111ef91906122f1565b6040805180830381865afa15801561120b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122f9190613295565b8152602001886001600160a01b0316635dcf719485604001516040518263ffffffff1660e01b815260040161126491906122f1565b6040805180830381865afa158015611280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a49190613295565b8152602001886001600160a01b0316635dcf719485606001516040518263ffffffff1660e01b81526004016112d991906122f1565b6040805180830381865afa1580156112f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113199190613295565b9052905061132a88838388886118e4565b925050505b95945050505050565b6000836001600160a01b031663bd02d0f56113538585611934565b6040518263ffffffff1660e01b815260040161137191815260200190565b602060405180830381865afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b29190612bf9565b90505b9392505050565b60006001600160ff1b038211156114265760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610527565b5090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a60405160200161146890612f48565b6040516020818303038152906040528051906020012060006040518363ffffffff1660e01b815260040161149d929190612bd5565b6020604051808303816000875af11580156114bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e09190612bf9565b50565b60008061152f8484604060c0600019901c6040518060400160405280601f81526020017f676574556e636f6d7061637465644f7261636c65426c6f636b4e756d626572008152506119ac565b9050806000036113b55760405163349f5fdd60e11b815260048101849052602401610527565b61155d6121c5565b60405163a8d8fff560e01b81526001600160a01b0380851660048301528316602482015260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590604401608060405180830381865af41580156115c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e491906132e3565b90506113b58482611a49565b6115f86121ec565b6040518060600160405280846001600160a01b0316635dcf719485602001516040518263ffffffff1660e01b815260040161163391906122f1565b6040805180830381865afa15801561164f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116739190613295565b8152602001846001600160a01b0316635dcf719485604001516040518263ffffffff1660e01b81526004016116a891906122f1565b6040805180830381865afa1580156116c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e89190613295565b8152602001846001600160a01b0316635dcf719485606001516040518263ffffffff1660e01b815260040161171d91906122f1565b6040805180830381865afa158015611739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175d9190613295565b90529392505050565b60008060008061177a8989898960016118e4565b9050600061178e8a878b600001518a611b12565b9050600080831380156117a85750816117a684611b8d565b115b9b929a50909850909650505050505050565b6060600082516001600160401b038111156117d7576117d7612455565b60405190808252806020026020018201604052801561181057816020015b6117fd6121c5565b8152602001906001900390816117f55790505b50905060005b8351811015610e1457600084828151811061183357611833612be3565b602002602001015190506118478682611555565b83838151811061185957611859612be3565b602002602001018190525050808061187090612fe9565b915050611816565b604051633d70e7e560e11b8152600481018290526000906001600160a01b03841690637ae1cfca90602401602060405180830381865afa1580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b59190612f92565b6000806118f387878787611bdf565b90508060000361190757600091505061132f565b600061192888886000015189604001518a606001518a600001518a8a611c3d565b905061132a8183611cd6565b60006040516020016119729060208082526018908201527713525397d4139317d19050d513d497d05195115497d0511360421b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03851690820152821515606082015260800161115a565b6000806119bb8561010061337d565b905060006119c9828861337d565b9050875181106119f4578787828660405163bdec9c0d60e01b8152600401610527949392919061339f565b6000888281518110611a0857611a08612be3565b602002602001015190506000878484611a2191906133d0565b611a2b908b6133ef565b611a3591906133d0565b9190911c8616935050505095945050505050565b80516001600160a01b0316611a71576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca611a8f8460000151611d1d565b6040518263ffffffff1660e01b8152600401611aad91815260200190565b602060405180830381865afa158015611aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aee9190612f92565b90508015610b145781516040516309f8c93760e01b815261052791906004016122f1565b6000846001600160a01b031663bd02d0f5611b2e868686611d9f565b6040518263ffffffff1660e01b8152600401611b4c91815260200190565b602060405180830381865afa158015611b69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132f9190612bf9565b6000808212156114265760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610527565b60008082611bf1578460600151611bf7565b84604001515b90506000611c0a87876000015184611e2e565b9050600084611c1e57604086015151611c25565b6020860151515b9050611c3181836133d0565b98975050505050505050565b600080611c55611c508a8a8a8a89611e49565b6113bc565b90506000611c668a8a8a8a89611e74565b9050811580611c73575080155b15611c8357600092505050611ccb565b6000611c90878787611e93565b90506000611ca1611c5083856133d0565b9050600087611cb957611cb48286613402565b611cc3565b611cc38583613402565b955050505050505b979650505050505050565b600080611ceb611ce585611ecc565b84611edd565b905060008413611d0c57611cfe816113bc565b611d0790613429565b611d15565b611d15816113bc565b949350505050565b6000604051602001611d55906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6000604051602001611dd3906020808252600e908201526d26a0ac2fa827262fa320a1aa27a960911b604082015260600190565b60408051601f1981840301815282825280516020918201209083015281018590526001600160a01b0384166060820152821515608082015260a0015b6040516020818303038152906040528051906020012090509392505050565b6000836001600160a01b031663bd02d0f56113538585611f93565b600080611e5887878786612001565b90506000611e6888888787612001565b905061132a8183613445565b600080611e838787878661201d565b90506000611e688888878761201d565b60008215611eb45781611ea7578351611ead565b83602001515b90506113b5565b81611ec35783602001516113b2565b50509051919050565b600080821215611426575060000390565b6000806000611ef88568327cb2734119d3b7a9601e1b612039565b915091508115611f1557611f0c848261337d565b92505050610e18565b68327cb2734119d3b7a9601e1b611f3568056bc75e2d631000008761337d565b611f3f91906133d0565b90506b1d6329f1c35ca4bfabb9f56160281b841115611f7557611f6b68056bc75e2d631000008561337d565b611f0c908261337d565b68056bc75e2d63100000611f89858361337d565b61132f91906133d0565b6000604051602001611fc4906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800161115a565b6000846001600160a01b031663bd02d0f5611b2e868686612084565b6000846001600160a01b031663bd02d0f5611b2e8686866120fc565b60008083600003612050575060019050600061207d565b8383028385828161206357612063613367565b041461207657600080925092505061207d565b6001925090505b9250929050565b60006040516020016120b7906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a001611e0f565b60006040516020016120b7906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b604080516102008101825260006101408201818152610160830182905261018083018290526101a083018290526101c083018290526101e083018290528252602082015290810161218861221e565b81526020016060815260200160608152602001606081526020016121aa6121c5565b81526000602082018190526040820181905260609091015290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b60405180606001604052806121ff6122d7565b815260200161220c6122d7565b81526020016122196122d7565b905290565b604080516101208101909152600060608083018281526080840183905260a0840183905260c0840183905260e08401929092526101008301528152602081016122b460408051610140810190915280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260408051606081018252600080825260208281018290529282015291015290565b604051806040016040528060008152602001600081525090565b6001600160a01b0391909116815260200190565b6001600160a01b03811681146114e057600080fd5b80151581146114e057600080fd5b6000610180828403121561233b57600080fd5b50919050565b60008060008060008060c0878903121561235a57600080fd5b863561236581612305565b9550602087013561237581612305565b9450604087013561238581612305565b935060608701356123958161231a565b92506080870135915060a08701356001600160401b038111156123b757600080fd5b6123c389828a01612328565b9150509295509295509295565b6000806000606084860312156123e557600080fd5b83356123f081612305565b925060208401356124008161231a565b915060408401356001600160401b0381111561241b57600080fd5b61242786828701612328565b9150509250925092565b6020808252600a908201526920a2262fa5a2a2a822a960b11b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171561248e5761248e612455565b60405290565b60405161014081016001600160401b038111828210171561248e5761248e612455565b604051606081016001600160401b038111828210171561248e5761248e612455565b60405160c081016001600160401b038111828210171561248e5761248e612455565b604051601f8201601f191681016001600160401b038111828210171561252357612523612455565b604052919050565b60006001600160401b0382111561254457612544612455565b5060051b60200190565b600082601f83011261255f57600080fd5b8135602061257461256f8361252b565b6124fb565b82815260059290921b8401810191818101908684111561259357600080fd5b8286015b848110156125b75780356125aa81612305565b8352918301918301612597565b509695505050505050565b600082601f8301126125d357600080fd5b813560206125e361256f8361252b565b82815260059290921b8401810191818101908684111561260257600080fd5b8286015b848110156125b75780358352918301918301612606565b6000601f838184011261262f57600080fd5b8235602061263f61256f8361252b565b82815260059290921b8501810191818101908784111561265e57600080fd5b8287015b848110156126f45780356001600160401b03808211156126825760008081fd5b818a0191508a603f8301126126975760008081fd5b858201356040828211156126ad576126ad612455565b6126be828b01601f191689016124fb565b92508183528c818386010111156126d55760008081fd5b8181850189850137506000908201870152845250918301918301612662565b50979650505050505050565b6000610180823603121561271357600080fd5b61271b61246b565b8235815260208301356001600160401b038082111561273957600080fd5b6127453683870161254e565b6020840152604085013591508082111561275e57600080fd5b61276a368387016125c2565b6040840152606085013591508082111561278357600080fd5b61278f368387016125c2565b606084015260808501359150808211156127a857600080fd5b6127b4368387016125c2565b608084015260a08501359150808211156127cd57600080fd5b6127d9368387016125c2565b60a084015260c08501359150808211156127f257600080fd5b6127fe368387016125c2565b60c084015260e085013591508082111561281757600080fd5b612823368387016125c2565b60e08401526101009150818501358181111561283e57600080fd5b61284a368288016125c2565b83850152506101209150818501358181111561286557600080fd5b612871368288016125c2565b83850152506101409150818501358181111561288c57600080fd5b6128983682880161261d565b8385015250610160915081850135818111156128b357600080fd5b6128bf3682880161254e565b8385015250505080915050919050565b600081518084526020808501945080840160005b838110156129085781516001600160a01b0316875295820195908201906001016128e3565b509495945050505050565b600081518084526020808501945080840160005b8381101561290857815187529582019590820190600101612927565b6000815180845260005b818110156129695760208185018101518683018201520161294d565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b8101915082860160005b858110156129d15782840389526129bf848351612943565b988501989350908401906001016129a7565b5091979650505050505050565b600060018060a01b03808616835280851660208401525060606040830152825160608301526020830151610180806080850152612a1f6101e08501836128cf565b91506040850151605f19808685030160a0870152612a3d8483612913565b935060608701519150808685030160c0870152612a5a8483612913565b935060808701519150808685030160e0870152612a778483612913565b935060a08701519150610100818786030181880152612a968584612913565b945060c08801519250610120828887030181890152612ab58685612913565b955060e089015193506101408389880301818a0152612ad48786612913565b9650828a0151945061016092508389880301838a0152612af48786612913565b9650818a015194508389880301868a0152612b0f8786612913565b9650808a01519550505081878603016101a0880152612b2e8585612989565b94508088015193505080868503016101c08701525050611ccb82826128cf565b6000808335601e19843603018112612b6557600080fd5b8301803591506001600160401b03821115612b7f57600080fd5b6020019150600581901b360382131561207d57600080fd5b6001600160a01b038581168252841660208201528215156040820152608060608201819052600090612bcb90830184612913565b9695505050505050565b918252602082015260400190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612c0b57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b60088110612c3857612c38612c12565b9052565b60038110612c3857612c38612c12565b612c57828251612c28565b6020810151612c696020840182612c3c565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b80516101c080845281516001600160a01b0390811691850191909152602082015181166101e0850152604082015181166102008501526060820151811661022085015260808201511661024084015260a0015160c0610260840152600090612d2e6102808501826128cf565b90506020830151612d426020860182612c4c565b5060408381015180511515610160870152602081015115156101808701529081015115156101a0860152610e14565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b600081518084526020808501945080840160005b8381101561290857612dcb878351612d71565b6080969096019590820190600101612db8565b60208152612e3660208201835180516001600160a01b03908116835260208083015182169084015260408083015182169084015260608083015182169084015260808083015182169084015260a09182015116910152565b602082015160e0820152600060408301516102406101008181860152612e60610260860184612cc2565b92506060860151601f19610120818887030181890152612e808684612da4565b9550608089015192508188870301610140890152612e9e8684612913565b955060a089015192508188870301610160890152612ebc8684612913565b955060c08901519250612ed3610180890184612d71565b60e08901516001600160a01b0316610200890152928801516102208801525050909401519390920192909252919050565b6001600160a01b0387811682528681166020830152858116604083015284166060820152821515608082015260c060a08201819052600090611c3190830184612913565b6020808252601790820152765245454e5452414e43595f47554152445f53544154555360481b604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215612fa457600080fd5b81516113b58161231a565b6001600160a01b03831681526040602082018190526000906113b290830184612943565b634e487b7160e01b600052601160045260246000fd5b600060018201612ffb57612ffb612fd3565b5060010190565b805161300d81612305565b919050565b600082601f83011261302357600080fd5b8151602061303361256f8361252b565b82815260059290921b8401810191818101908684111561305257600080fd5b8286015b848110156125b757805161306981612305565b8352918301918301613056565b80516008811061300d57600080fd5b80516003811061300d57600080fd5b600061014082840312156130a757600080fd5b6130af612494565b90506130ba82613076565b81526130c860208301613085565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525092915050565b60006060828403121561313957600080fd5b6131416124b7565b9050815161314e8161231a565b8152602082015161315e8161231a565b602082015260408201516131718161231a565b604082015292915050565b60006020828403121561318e57600080fd5b81516001600160401b03808211156131a557600080fd5b908301906101c082860312156131ba57600080fd5b6131c26124b7565b8251828111156131d157600080fd5b830160c081880312156131e357600080fd5b6131eb6124d9565b81516131f681612305565b8152602082015161320681612305565b6020820152604082015161321981612305565b604082015261322a60608301613002565b606082015261323b60808301613002565b608082015260a08201518481111561325257600080fd5b61325e89828501613012565b60a0830152508252506132748660208501613094565b6020820152613287866101608501613127565b604082015295945050505050565b6000604082840312156132a757600080fd5b604080519081016001600160401b03811182821017156132c9576132c9612455565b604052825181526020928301519281019290925250919050565b6000608082840312156132f557600080fd5b604051608081016001600160401b038111828210171561331757613317612455565b604052825161332581612305565b8152602083015161333581612305565b6020820152604083015161334881612305565b6040820152606083015161335b81612305565b60608201529392505050565b634e487b7160e01b600052601260045260246000fd5b60008261339a57634e487b7160e01b600052601260045260246000fd5b500490565b6080815260006133b26080830187612913565b8560208401528460408401528281036060840152611ccb8185612943565b60008160001904831182151516156133ea576133ea612fd3565b500290565b81810381811115610e1857610e18612fd3565b818103600083128015838313168383128216171561342257613422612fd3565b5092915050565b6000600160ff1b820161343e5761343e612fd3565b5060000390565b80820180821115610e1857610e18612fd356fea2646970667358221220e7eea10bdb7a4b3818581878661eb15f7d57897d5ba98061ac261389c014a8a064736f6c63430008100033";

type AdlHandlerConstructorParams =
  | [linkLibraryAddresses: AdlHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdlHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AdlHandler__factory extends ContractFactory {
  constructor(...args: AdlHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AdlHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AdlHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f1c6d6b2bd25207c7e7320f7c6bcfa9419\\$__", "g"),
      linkLibraryAddresses["contracts/adl/AdlUtils.sol:AdlUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$18943158f75973db0541c3d7c8650b2485\\$__", "g"),
      linkLibraryAddresses["contracts/order/OrderUtils.sol:OrderUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdlHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _orderVault,
      _oracle,
      _swapHandler,
      _referralStorage,
      overrides || {}
    ) as Promise<AdlHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _orderVault,
      _oracle,
      _swapHandler,
      _referralStorage,
      overrides || {}
    );
  }
  override attach(address: string): AdlHandler {
    return super.attach(address) as AdlHandler;
  }
  override connect(signer: Signer): AdlHandler__factory {
    return super.connect(signer) as AdlHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdlHandlerInterface {
    return new utils.Interface(_abi) as AdlHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdlHandler {
    return new Contract(address, _abi, signerOrProvider) as AdlHandler;
  }
}

export interface AdlHandlerLibraryAddresses {
  ["contracts/adl/AdlUtils.sol:AdlUtils"]: string;
  ["contracts/order/OrderUtils.sol:OrderUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
}
