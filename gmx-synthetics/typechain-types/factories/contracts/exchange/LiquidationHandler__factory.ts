/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LiquidationHandler,
  LiquidationHandlerInterface,
} from "../../../contracts/exchange/LiquidationHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract OrderVault",
        name: "_orderVault",
        type: "address",
      },
      {
        internalType: "contract Oracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract SwapHandler",
        name: "_swapHandler",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "_referralStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "compactedValues",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slotIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "CompactedArrayOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedBlockNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EndOfOracleSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "primaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "primaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidPrimaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secondaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidSecondaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "OracleError",
    type: "event",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "signerInfo",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleTimestamps",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedDecimals",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "priceFeedTokens",
            type: "address[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract Oracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [
      {
        internalType: "contract OrderVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralStorage",
    outputs: [
      {
        internalType: "contract IReferralStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [
      {
        internalType: "contract SwapHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200233a3803806200233a833981016040819052620000359162000085565b6001600160a01b0395861660805295851660a05292841660c05290831660e052821661012052811661010052166101405262000130565b6001600160a01b03811681146200008257600080fd5b50565b600080600080600080600060e0888a031215620000a157600080fd5b8751620000ae816200006c565b6020890151909750620000c1816200006c565b6040890151909650620000d4816200006c565b6060890151909550620000e7816200006c565b6080890151909450620000fa816200006c565b60a08901519093506200010d816200006c565b60c089015190925062000120816200006c565b8091505092959891949750929550565b60805160a05160c05160e05161010051610120516101405161213b620001ff600039600081816081015261096301526000818161010c01528181610241015261090d015260008181610133015261093801526000818161015a01526108e2015260008181610181015281816102830152818161034f01526108b701526000818160be01526106f501526000818160e501528181610262015281816103270152818161051a01528181610622015281816107d4015281816108550152818161088f0152610ad6015261213b6000f3fe608060405234801561001057600080fd5b50600436106100775760003560e01c80626cc35e1461007c5780634a4a7b04146100b9578063660d0d67146100e05780637dc0d1d0146101075780638a53aaac1461012e57806393845e46146101555780639ff78c301461017c578063efff1475146101a3575b600080fd5b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6040516100b091906111bc565b60405180910390f35b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6100a37f000000000000000000000000000000000000000000000000000000000000000081565b6101b66101b13660046111f3565b6101b8565b005b6101c0610516565b61023f6040516020016101f9906020808252601290820152712624a8aaa4a220aa24a7a72fa5a2a2a822a960711b604082015260600190565b60405160208183030381529060405280519060200120604051806040016040528060128152602001712624a8aaa4a220aa24a7a72fa5a2a2a822a960711b8152506106de565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006102ab8461152d565b60405163df02681160e01b81526001600160a01b0385169063df026811906102db9086908690869060040161180b565b600060405180830381600087803b1580156102f557600080fd5b505af1158015610309573d6000803e3d6000fd5b5050505060005a60405163cd17310760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152808d166044830152808c1660648301528a16608482015288151560a482015290915060009073__$24ecf20cb15267250766fd478de108983d$__9063cd1731079060c401602060405180830381865af41580156103d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fa9190611986565b905060006104128261040b8a61152d565b338661078e565b8051516040820151602001515191925061044791610442903090600781111561043d5761043d61199f565b610a13565b610aa9565b604051630893a94f60e41b815273__$18943158f75973db0541c3d7c8650b2485$__9063893a94f09061047e908490600401611b6b565b60006040518083038186803b15801561049657600080fd5b505af41580156104aa573d6000803e3d6000fd5b50505050505050836001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050505050505061050f610ad4565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f560405160200161055690611c91565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161058a91815260200190565b602060405180830381865afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190611986565b905080156106205760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a60405160200161065e90611c91565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526004820152600160248201526044016020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611986565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb9061072c9033908690600401611cc2565b602060405180830381865afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d9190611cdb565b6106da57338160405163a35b150b60e01b8152600401610617929190611cf8565b610796611050565b61079e611050565b6020810186905260405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f3906107fe907f0000000000000000000000000000000000000000000000000000000000000000908a90600401611cc2565b600060405180830381865af415801561081b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108439190810190611e9e565b604082018190525160a0015161087a907f000000000000000000000000000000000000000000000000000000000000000090610b91565b60608083019190915281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690915282517f0000000000000000000000000000000000000000000000000000000000000000821660209182015283517f0000000000000000000000000000000000000000000000000000000000000000831660409182015284517f0000000000000000000000000000000000000000000000000000000000000000841694019390935283517f0000000000000000000000000000000000000000000000000000000000000000831660809091015283517f000000000000000000000000000000000000000000000000000000000000000090921660a0909201919091529086015190860151516109a19190610c57565b608082015260608501516020860151516109bb9190610c57565b60a0820152604081015151606001516001600160a01b0316156109f557805151604082015151606001516109ef9190610ce3565b60c08201525b6001600160a01b039390931660e08401525061010082015292915050565b6000604051602001610a56906020808252601e908201527f455845435554455f4f524445525f464541545552455f44495341424c45440000604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03851690820152606081018390526080016040516020818303038152906040528051906020012090505b92915050565b610ab38282610d85565b156106da5760405163dd70e0c960e01b815260048101829052602401610617565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a604051602001610b1290611c91565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526004820152600060248201526044016020604051808303816000875af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611986565b50565b6060600082516001600160401b03811115610bae57610bae611282565b604051908082528060200260200182016040528015610be757816020015b610bd46110dc565b815260200190600190039081610bcc5790505b50905060005b8351811015610c4f576000848281518110610c0a57610c0a611fb7565b60200260200101519050610c1e8682610ce3565b838381518110610c3057610c30611fb7565b6020026020010181905250508080610c4790611fe3565b915050610bed565b509392505050565b60606000826001600160401b03811115610c7357610c73611282565b604051908082528060200260200182016040528015610c9c578160200160208202803683370190505b50905060005b83811015610c4f57610cb48582610df1565b828281518110610cc657610cc6611fb7565b602090810291909101015280610cdb81611fe3565b915050610ca2565b610ceb6110dc565b60405163a8d8fff560e01b81526001600160a01b0380851660048301528316602482015260009073__$ff439aa65a80c9eec648f15db20b189505$";

type LiquidationHandlerConstructorParams =
  | [linkLibraryAddresses: LiquidationHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LiquidationHandler__factory extends ContractFactory {
  constructor(...args: LiquidationHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LiquidationHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LiquidationHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$24ecf20cb15267250766fd478de108983d\\$__", "g"),
      linkLibraryAddresses[
        "contracts/liquidation/LiquidationUtils.sol:LiquidationUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$18943158f75973db0541c3d7c8650b2485\\$__", "g"),
      linkLibraryAddresses["contracts/order/OrderUtils.sol:OrderUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidationHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _orderVault,
      _oracle,
      _swapHandler,
      _referralStorage,
      overrides || {}
    ) as Promise<LiquidationHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _orderVault,
      _oracle,
      _swapHandler,
      _referralStorage,
      overrides || {}
    );
  }
  override attach(address: string): LiquidationHandler {
    return super.attach(address) as LiquidationHandler;
  }
  override connect(signer: Signer): LiquidationHandler__factory {
    return super.connect(signer) as LiquidationHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationHandlerInterface {
    return new utils.Interface(_abi) as LiquidationHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidationHandler {
    return new Contract(address, _abi, signerOrProvider) as LiquidationHandler;
  }
}

export interface LiquidationHandlerLibraryAddresses {
  ["contracts/liquidation/LiquidationUtils.sol:LiquidationUtils"]: string;
  ["contracts/order/OrderUtils.sol:OrderUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
}
